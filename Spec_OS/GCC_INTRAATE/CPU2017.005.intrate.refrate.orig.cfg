# Invocation command line:
# /media/pheonix/d630b300-6092-41db-bf6a-dd1bd0f42bca/home/manavjeet/git/OS/Spec_OS/bin/harness/runcpu --configfile Manav2-gcc-linux-x86.cfg --noreportable --nopower --runmode rate --tune base --size refrate intrate
# output_root was not used for this run
############################################################################
#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: gcc / g++ / gfortran on Linux x86
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#    Compiler version(s):    4.4.7, 4.9.2, 5.2.0, 6.3.0, 7.2.1, 8.1.0
#    Operating system(s):    Oracle Linux Server 6.5 and 7.4 /
#                            Red Hat Enterprise Linux Server 6.5 and 7.4
#    Hardware:               Xeon
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Known Limitations with GCC 4
#
#   (1) Possible problem: compile time messages
#                             error: unrecognized command line option '...'
#      Recommendation:    Use a newer version of the compiler.
#                         If that is not possible, remove the unrecognized
#                         option from this config file.
#
#   (2) Possible problem: run time errors messages
#           527.cam4_r or 627.cam4_s    *** Miscompare of cam4_validate.txt
#      Recommendation: Use a newer version of the compiler.
#                      If that is not possible, try reducing the optimization.
#
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label gcc_2                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or,
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 4      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define    os           LINUX
%if %{bits} == 64
%   define model        -m64
%elif %{bits} == 32
%   define model        -m32
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif



#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

command_add_redirect = 1
flagsurl000          = /media/pheonix/d630b300-6092-41db-bf6a-dd1bd0f42bca/home/manavjeet/git/OS/Spec_OS/config/flags/gcc.xml
ignore_errors        = 1
iterations           = 1
label                = %{label}-m%{bits}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus}
mean_anyway          = 1
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
reportable           = 0
tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system,
#              or perhaps the number of virtual CPUs as reported by:
#                     grep -c processor /proc/cpuinfo
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You could try raising
#               it.  A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 4   # EDIT to change number of OpenMP threads (see above)


#------- Compilers ------------------------------------------------------------
default:
#  EDIT: The parent directory for your compiler.
#        Do not include the trailing /bin/
#        Do not include a trailing slash
#  Examples:
#   1  On a Red Hat system, you said
#      'yum install devtoolset-7'
#      Use:                 %   define gcc_dir /opt/rh/devtoolset-7/root/usr
#
#   2  You built GCC in:                       /disk1/mybuild/gcc-8.1.0/bin/gcc
#      Use:                 %   define gcc_dir /disk1/mybuild/gcc-8.1.0
#
#   3  You want:                               /usr/bin/gcc
#      Use:                 %   define gcc_dir /usr
#      WARNING: See section
#      "Known Limitations with GCC 4"
#
%ifndef %{gcc_dir}
%   define  gcc_dir        /usr  # EDIT (see above)
%endif

# EDIT if needed: the preENV line adds library directories to the runtime
#      path.  You can adjust it, or add lines for other environment variables.
#      See: https://www.spec.org/cpu2017/Docs/config.html#preenv
#      and: https://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html
   preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64
  #preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64:%{ENV_LD_LIBRARY_PATH}
   SPECLANG                = %{gcc_dir}/bin/
   CC                      = $(SPECLANG)gcc     -std=c99   %{model}
   CXX                     = $(SPECLANG)g++     -std=c++03 %{model}
   FC                      = $(SPECLANG)gfortran           %{model}
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = -v
   CXX_VERSION_OPTION      = -v
   FC_VERSION_OPTION       = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file
    # systems may fail spectacularly and frequently (or, worse, quietly and
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix}

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG
   FPORTABILITY  = -fconvert=big-endian

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
   PORTABILITY   = -funsigned-char -DSPEC_LINUX

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
   CPORTABILITY    = -DSPEC_CASE_FLAG
   FPORTABILITY    = -fconvert=big-endian


#-------- Tuning Flags common to Base and Peak --------------------------------

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
      EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
   fpspeed:
      #
      # 627.cam4 needs a big stack; the preENV will apply it to all
      # benchmarks in the set, as required by the rules.
      #
      preENV_OMP_STACKSIZE = 120M
%endif


#--------  Baseline Tuning Flags ----------------------------------------------
#
# EDIT if needed -- Older GCC might not support some of the optimization
#                   switches here.  See also 'About the -fno switches' below.
#
default=base:         # flags for all base
   OPTIMIZE       = -g -O3 -march=native -fno-unsafe-math-optimizations  -fno-tree-loop-vectorize

intrate,intspeed=base: # flags for integer base
   EXTRA_COPTIMIZE = -fno-strict-aliasing -fgnu89-inline
# Notes about the above
#  - 500.perlbench_r/600.perlbench_s needs -fno-strict-aliasing.
#  - 502.gcc_r/602.gcc_s             needs -fgnu89-inline or -z muldefs
#  - For 'base', all benchmarks in a set must use the same options.
#  - Therefore, all base benchmarks get the above.  See:
#       www.spec.org/cpu2017/Docs/runrules.html#BaseFlags
#       www.spec.org/cpu2017/Docs/benchmarks/500.perlbench_r.html
#       www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html


#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
   basepeak = yes  # if you develop some peak tuning, remove this line.
   #
   # -----------------------
   # About the -fno switches
   # -----------------------
   #
   # For 'base', this config file (conservatively) disables some optimizations.
   # You might want to try turning some of them back on, by creating a 'peak'
   # section here, with individualized benchmark options:
   #
   #        500.perlbench_r=peak:
   #           OPTIMIZE = this
   #        502.gcc_r=peak:
   #           OPTIMIZE = that
   #        503.bwaves_r=peak:
   #           OPTIMIZE = other   .....(and so forth)
   #
   # If you try it:
   #   - You must remove the 'basepeak' option, above.
   #   - You will need time and patience, to diagnose and avoid any errors.
   #   - perlbench is unlikely to work with strict aliasing
   #   - Some floating point benchmarks may get wrong answers, depending on:
   #         the particular chip
   #         the version of GCC
   #         other optimizations enabled
   #         -m32 vs. -m64
   #   - See: http://www.spec.org/cpu2017/Docs/config.html
   #   - and: http://www.spec.org/cpu2017/Docs/runrules.html


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler000   = C/C++/Fortran: Version 9.2.1 20200123 of GCC, the
   sw_compiler001   = GNU Compiler Collection

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = ASUS corp.
   tester             = Manavjeet Singh
#   test_sponsor       = My Corporation
#   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_cpu_name        =   Intel i5-8300H               # chip name
   hw_cpu_nominal_mhz =   2300                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     =   4000                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
#   hw_model           = # TurboBlaster 3000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = 4                                # number cores enabled
#   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore =  2                                   # number threads enabled per core
#   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
#  sw_file            = # ext99                               # File system
#  sw_os001           = # Linux Sailboat                      # Operating system
#  sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
#  sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo


# The following settings were obtained by running the sysinfo_program
# 'specperl $[top]/bin/sysinfo' (sysinfo:SHA:32259ebd59f3e93740723202f27c44c82ee68e0f2e40cd2ca50cfd5519772397)
default:
notes_plat_sysinfo_000 = Sysinfo program
notes_plat_sysinfo_005 = /media/pheonix/d630b300-6092-41db-bf6a-dd1bd0f42bca/home/manavjeet/git/OS/Spec_OS/bin/sys
notes_plat_sysinfo_010 = info
notes_plat_sysinfo_015 = Rev: r5974 of 2018-05-19 9bcde8f2999c33d61f64985e45859ea9
notes_plat_sysinfo_020 = running on parrot Thu Feb 27 12:24:56 2020
notes_plat_sysinfo_025 =
notes_plat_sysinfo_030 = SUT (System Under Test) info as seen by some common utilities.
notes_plat_sysinfo_035 = For more information on this section, see
notes_plat_sysinfo_040 =    https://www.spec.org/cpu2017/Docs/config.html#sysinfo
notes_plat_sysinfo_045 =
notes_plat_sysinfo_050 = From /proc/cpuinfo
notes_plat_sysinfo_055 =    model name : Intel(R) Core(TM) i5-8300H CPU @ 2.30GHz
notes_plat_sysinfo_060 =       1  "physical id"s (chips)
notes_plat_sysinfo_065 =       8 "processors"
notes_plat_sysinfo_070 =    cores, siblings (Caution: counting these is hw and system dependent. The following
notes_plat_sysinfo_075 =    excerpts from /proc/cpuinfo might not be reliable.  Use with caution.)
notes_plat_sysinfo_080 =       cpu cores : 4
notes_plat_sysinfo_085 =       siblings  : 8
notes_plat_sysinfo_090 =       physical 0: cores 0 1 2 3
notes_plat_sysinfo_095 =
notes_plat_sysinfo_100 = From lscpu:
notes_plat_sysinfo_105 =      Architecture:                    x86_64
notes_plat_sysinfo_110 =      CPU op-mode(s):                  32-bit, 64-bit
notes_plat_sysinfo_115 =      Byte Order:                      Little Endian
notes_plat_sysinfo_120 =      Address sizes:                   39 bits physical, 48 bits virtual
notes_plat_sysinfo_125 =      CPU(s):                          8
notes_plat_sysinfo_130 =      On-line CPU(s) list:             0-7
notes_plat_sysinfo_135 =      Thread(s) per core:              2
notes_plat_sysinfo_140 =      Core(s) per socket:              4
notes_plat_sysinfo_145 =      Socket(s):                       1
notes_plat_sysinfo_150 =      NUMA node(s):                    1
notes_plat_sysinfo_155 =      Vendor ID:                       GenuineIntel
notes_plat_sysinfo_160 =      CPU family:                      6
notes_plat_sysinfo_165 =      Model:                           158
notes_plat_sysinfo_170 =      Model name:                      Intel(R) Core(TM) i5-8300H CPU @ 2.30GHz
notes_plat_sysinfo_175 =      Stepping:                        10
notes_plat_sysinfo_180 =      CPU MHz:                         807.315
notes_plat_sysinfo_185 =      CPU max MHz:                     4000.0000
notes_plat_sysinfo_190 =      CPU min MHz:                     800.0000
notes_plat_sysinfo_195 =      BogoMIPS:                        4599.93
notes_plat_sysinfo_200 =      Virtualization:                  VT-x
notes_plat_sysinfo_205 =      L1d cache:                       128 KiB
notes_plat_sysinfo_210 =      L1i cache:                       128 KiB
notes_plat_sysinfo_215 =      L2 cache:                        1 MiB
notes_plat_sysinfo_220 =      L3 cache:                        8 MiB
notes_plat_sysinfo_225 =      NUMA node0 CPU(s):               0-7
notes_plat_sysinfo_230 =      Vulnerability Itlb multihit:     KVM: Mitigation: Split huge pages
notes_plat_sysinfo_235 =      Vulnerability L1tf:              Mitigation; PTE Inversion; VMX conditional cache
notes_plat_sysinfo_240 =      flushes, SMT vulnerable
notes_plat_sysinfo_245 =      Vulnerability Mds:               Mitigation; Clear CPU buffers; SMT vulnerable
notes_plat_sysinfo_250 =      Vulnerability Meltdown:          Mitigation; PTI
notes_plat_sysinfo_255 =      Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via
notes_plat_sysinfo_260 =      prctl and seccomp
notes_plat_sysinfo_265 =      Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user
notes_plat_sysinfo_270 =      pointer sanitization
notes_plat_sysinfo_275 =      Vulnerability Spectre v2:        Mitigation; Full generic retpoline, IBPB
notes_plat_sysinfo_280 =      conditional, IBRS_FW, STIBP conditional, RSB filling
notes_plat_sysinfo_285 =      Vulnerability Tsx async abort:   Not affected
notes_plat_sysinfo_290 =      Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr
notes_plat_sysinfo_295 =      pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx
notes_plat_sysinfo_300 =      pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology
notes_plat_sysinfo_305 =      nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3
notes_plat_sysinfo_310 =      sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer
notes_plat_sysinfo_315 =      aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single
notes_plat_sysinfo_320 =      pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase
notes_plat_sysinfo_325 =      tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt
notes_plat_sysinfo_330 =      xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window
notes_plat_sysinfo_335 =      hwp_epp md_clear flush_l1d
notes_plat_sysinfo_340 =
notes_plat_sysinfo_345 = /proc/cpuinfo cache data
notes_plat_sysinfo_350 =    cache size : 8192 KB
notes_plat_sysinfo_355 =
notes_plat_sysinfo_360 = From numactl --hardware  WARNING: a numactl 'node' might or might not correspond to a
notes_plat_sysinfo_365 = physical chip.
notes_plat_sysinfo_370 =
notes_plat_sysinfo_375 = From /proc/meminfo
notes_plat_sysinfo_380 =    MemTotal:        8074588 kB
notes_plat_sysinfo_385 =    HugePages_Total:       0
notes_plat_sysinfo_390 =    Hugepagesize:       2048 kB
notes_plat_sysinfo_395 =
notes_plat_sysinfo_400 = /usr/bin/lsb_release -d
notes_plat_sysinfo_405 =    Parrot GNU/Linux 4.8
notes_plat_sysinfo_410 =
notes_plat_sysinfo_415 = From /etc/*release* /etc/*version*
notes_plat_sysinfo_420 =    debian_version: parrot
notes_plat_sysinfo_425 =    os-release:
notes_plat_sysinfo_430 =       PRETTY_NAME="Parrot GNU/Linux 4.8"
notes_plat_sysinfo_435 =       NAME="Parrot GNU/Linux"
notes_plat_sysinfo_440 =       ID=parrot
notes_plat_sysinfo_445 =       ID_LIKE=debian
notes_plat_sysinfo_450 =       VERSION="4.8"
notes_plat_sysinfo_455 =       VERSION_ID="4.8"
notes_plat_sysinfo_460 =       HOME_URL="https://www.parrotlinux.org/"
notes_plat_sysinfo_465 =       SUPPORT_URL="https://community.parrotlinux.org/"
notes_plat_sysinfo_470 =
notes_plat_sysinfo_475 = uname -a:
notes_plat_sysinfo_480 =    Linux parrot 5.4.0-3parrot1-amd64 #1 SMP Parrot 5.4.13-3parrot2 (2020-02-01) x86_64
notes_plat_sysinfo_485 =    GNU/Linux
notes_plat_sysinfo_490 =
notes_plat_sysinfo_495 = Kernel self-reported vulnerability status:
notes_plat_sysinfo_500 =
notes_plat_sysinfo_505 = CVE-2017-5754 (Meltdown):          Mitigation: PTI
notes_plat_sysinfo_510 = CVE-2017-5753 (Spectre variant 1): Mitigation: usercopy/swapgs barriers and __user
notes_plat_sysinfo_515 = pointer sanitization
notes_plat_sysinfo_520 = CVE-2017-5715 (Spectre variant 2): Mitigation: Full generic retpoline, IBPB: conditional,
notes_plat_sysinfo_525 = IBRS_FW, STIBP: conditional, RSB filling
notes_plat_sysinfo_530 =
notes_plat_sysinfo_535 = run-level 5 Feb 25 15:47
notes_plat_sysinfo_540 =
notes_plat_sysinfo_545 = SPEC is set to:
notes_plat_sysinfo_550 = /media/pheonix/d630b300-6092-41db-bf6a-dd1bd0f42bca/home/manavjeet/git/OS/Spec_OS
notes_plat_sysinfo_555 =    Filesystem     Type  Size  Used Avail Use% Mounted on
notes_plat_sysinfo_560 =    /dev/sda4      ext4  137G   97G   34G  75%
notes_plat_sysinfo_565 =    /media/pheonix/d630b300-6092-41db-bf6a-dd1bd0f42bca
notes_plat_sysinfo_570 =
notes_plat_sysinfo_575 = Additional information from dmidecode follows.  WARNING: Use caution when you interpret
notes_plat_sysinfo_580 = this section. The 'dmidecode' program reads system data which is "intended to allow
notes_plat_sysinfo_585 = hardware to be accurately determined", but the intent may not be met, as there are
notes_plat_sysinfo_590 = frequent changes to hardware, firmware, and the "DMTF SMBIOS" standard.
notes_plat_sysinfo_595 =
notes_plat_sysinfo_600 = (End of data from sysinfo program)
hw_cpu_name    = Intel Core i5-8300H
hw_disk        = 137 GB  add more disk info here
hw_memory000   = 7.701 GB fixme: If using DDR4, the format is:
hw_memory001   = 'N GB (N x N GB nRxn PC4-nnnnX-X)'
hw_nchips      = 1
prepared_by    = pheonix  (is never output, only tags rawfile)
sw_file        = ext4
sw_os000       = Parrot GNU/Linux 4.8
sw_os001       = 5.4.0-3parrot1-amd64
sw_state       = Run level 5 (add definition here)
# End of settings added by sysinfo_program


# The following section was added automatically, and contains settings that
# did not appear in the original configuration file, but were added to the
# raw file after the run.
default:
test_sponsor = ASUS corp.
notes_000 =Environment variables set by runcpu before the start of the run:
notes_005 =LD_LIBRARY_PATH = "/usr/lib64/:/usr/lib/:/lib64"
notes_010 =
